-----------------------------------------------------------------------------------------------------------------
                                                ## Table - People
-----------------------------------------------------------------------------------------------------------------

### Instructions
1. Create a table called Person that records a person's ID, Name, Age, Height ( in cm ), City, FavoriteColor. 
    * ID should be an auto-incrementing id/primary key - Use type: INTEGER PRIMARY KEY AUTOINCREMENT
        CREATE TABLE Person (
            ID INTEGER PRIMARY KEY AUTOINCREMENT,
            Name text,
            Age integer,
            Height integer,
            City text,
            FavoriteColor text
        );


2. Add 5 different people into the Person database. 
    * Remember to not include the ID because it should auto-increment.
        INSERT INTO Person
        (Name, Age, Height, City, FavoriteColor)
        VALUES    
        ('Lizzy Jackson', 24, 182, 'Portland', 'Blue'),
        ('Ron Bergundy', 45, 176, 'Fresno', 'Pink'),
        ('Todd Masterson', 10, 60, null, 'Yellow'),
        ('Randy Newman', 29, 155, 'Portland', 'Purple'),
        ('Ahmad Bobmed', 60, 133, 'New York', 'Blue');


3. List all the people in the Person table by Height from tallest to shortest.
        SELECT Name, Height
        FROM Person
        ORDER BY Height DESC;


4. List all the people in the Person table by Height from shortest to tallest.
        SELECT Name, Height
        FROM Person
        ORDER BY Height ASC;


5. List all the people in the Person table by Age from oldest to youngest.
        SELECT *
        FROM Person
        ORDER BY Age DESC;


6. List all the people in the Person table older than age 20.
        SELECT *
        FROM Person
        WHERE Age > 20;


7. List all the people in the Person table that are exactly 18.
        SELECT *
        FROM Person
        WHERE Age=20;


8. List all the people in the Person table that are less than 20 and older than 30.
        SELECT *
        FROM Person
        WHERE Age < 20 OR Age > 30;


9. List all the people in the Person table that are not 27 (Use not equals).
        SELECT *
        FROM Person
        WHERE Age != 27;


10. List all the people in the Person table where their favorite color is not red.
        SELECT *
        FROM Person
        WHERE FavoriteColor != 'Red';

11. List all the people in the Person table where their favorite color is not red and is not blue.
        SELECT *
        FROM Person
        WHERE FavoriteColor != 'Red' AND FavoriteColor != 'Blue';


12. List all the people in the Person table where their favorite color is orange or green.
        SELECT *
        FROM Person
        WHERE FavoriteColor in ('Orange', 'Green');

                    or

        SELECT *
        FROM Person
        WHERE FavoriteColor = 'Green' OR FavoriteColor = 'Orange';


13. List all the people in the Person table where their favorite color is orange, green or blue (use IN).
        SELECT *
        FROM Person
        WHERE FavoriteColor in ('Orange', 'Green', 'Blue');


14. List all the people in the Person table where their favorite color is yellow or purple (use IN).
        SELECT *
        FROM Person
        WHERE FavoriteColor in ('Yellow', 'Purple');


------------------------------------------------------------------------------------------------------------------------
                                                Table - Orders
------------------------------------------------------------------------------------------------------------------------
1. Create a table called Orders that records: PersonID, ProductName, ProductPrice, Quantity.
        CREATE TABLE Orders(
  	        PersonID text,                      ---->Note: Usually should do an integer
	        ProductName text,
  	        ProductPrice decimal,
  	        Quantity integer
        );


2. Add 5 Orders to the Orders table.
    - Make orders for at least two different people.
    - PersonID should be different for different people.
        INSERT INTO Orders
        (PersonID, ProductName, ProductPrice, Quantity)
        VALUES
        ('UT1', 'Ultimate Music Collection Vol 5', 21.99, 1),
        ('WY1', 'Country Music From Old West Anniversary Collection', 3.99, 10),
        ('UT2', 'The Best of the 90s, From AC/DC to ZZTop', 10.59, 2),
        ('UT1', 'Christmas in Hawaii, Perfect Holiday Gift', 0.99, 100),
        ('WY1', 'Disney VS Godzilla: The epic battle royale of music', 119.29, 1);


3. Select all the records from the Orders table.
        Select *
        From Orders;


4. Calculate the total number of products ordered.
        SELECT SUM(Quantity) AS Total_Number_Of_Products_Ordered
        FROM Orders;


5. Calculate the total order price.
        SELECT SUM(ProductPrice * Quantity) AS TOTAL
        FROM Orders;


6. Calculate the total order price by a single PersonID.
        SELECT PersonID, SUM(ProductPrice * Quantity) AS SUM_OF_ORDER
        FROM Orders
        WHERE PersonID='UT1';

------------------------------------------------------------------------------------------------------------------------
                                            Table - Artist
------------------------------------------------------------------------------------------------------------------------
1. Add 3 new Artists to the Artist table. ( It's already created )
        INSERT INTO Artist
        ( Name )
        VALUES
        ('Bob Ross'),
        ('Red Wilson'),
        ('Bob T. Builder');


2. Select 10 artists in reverse alphabetical order.
        SELECT Name
        FROM Artist
        ORDER BY Name DESC
        LIMIT 10;


3. Select 5 artists in alphabetical order.
        SELECT Name
        FROM Artist
        ORDER BY Name ASC
        LIMIT 5;


4. Select all artists that start with the word "Black".
        SELECT Name
        FROM Artist
        WHERE name LIKE 'Black%';


5. Select all artists that contain the word "Black".
        SELECT Name
        FROM Artist
        WHERE name LIKE '%Black%';


------------------------------------------------------------------------------------------------------------------------
                                            Table - Employee
------------------------------------------------------------------------------------------------------------------------
1. List all Employee first and last names only that live in Calgary.
        SELECT FirstName, LastName
        FROM Employee
        WHERE City='Calgary';


2. Find the first and last name and birthdate for the youngest employee.
        SELECT FirstName, LastName, Max(BirthDate)
        FROM Employee;


3. Find the first and last name and birthdate for the oldest employee.
        SELECT FirstName, LastName, Min(BirthDate)
        FROM Employee;


4. Find everyone that reports to Nancy Edwards (Use the ReportsTo column).
   * You will need to query the employee table to find the Id for Nancy Edwards
        SELECT *
        FROM Employee
        WHERE FirstName='Nancy' AND LASTNAME='Edwards';

        SELECT *
        From Employee
        WHERE ReportsTo=2;


5. Count how many people live in Lethbridge.
        SELECT COUNT(*)
        FROM Employee
        WHERE City='Lethbridge';

------------------------------------------------------------------------------------------------------------------------
                                            Table - Invoice
------------------------------------------------------------------------------------------------------------------------
1. Count how many orders were made from the USA.
        SELECT COUNT(*)
        FROM Invoice
        WHERE BillingCountry='USA';


2. Find the largest order total amount.
        SELECT MAX(Total)
        FROM Invoice;


3. Find the smallest order total amount.
        SELECT MIN(Total)
        FROM Invoice;


4. Find all orders bigger than $5.
        SELECT *
        FROM Invoice
        WHERE Total>5;


5. Count how many orders were smaller than $5.
        SELECT *
        FROM Invoice
        WHERE Total<5;


6. Count how many orders were in CA, TX, or AZ (use IN).
        SELECT *
        FROM Invoice
        WHERE BillingState in ('CA', 'TX', 'AZ');


7. Get the average total of the orders.
        SELECT AVG(Total)
        FROM Invoice;


8. Get the total sum of the orders.
        SELECT SUM(Total)
        FROM Invoice;


------------------------------------------------------------------------------------------------------------------------